//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_80
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u32 triton__param_4,
	.param .u32 triton__param_5
)
.maxntid 512, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<47>;
	.reg .b64 	%rd<13>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd6, [triton__param_0];
	ld.param.u64 	%rd7, [triton__param_1];
$L__tmp0:
	.loc	1 21 28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd8, [triton__param_2];
	.loc	1 24 33
	mov.u32 	%r42, %tid.x;
	and.b32  	%r43, %r42, 31;
	ld.param.u64 	%rd9, [triton__param_3];
	shl.b32 	%r44, %r42, 2;
	and.b32  	%r45, %r44, 2044;
	.loc	1 31 45
	shl.b32 	%r46, %r1, 11;
	.loc	1 31 40
	or.b32  	%r47, %r46, %r45;
	.loc	1 31 34
	mul.wide.s32 	%rd10, %r47, 2;
	add.s64 	%rd1, %rd7, %rd10;
	mov.b32 	%r4, 0;
	mov.pred 	%p1, -1;
	.loc	1 31 51
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	cvt.u16.u32 	%rs1, %r2;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r2; }
	cvt.u16.u32 	%rs3, %r3;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r3; }
	.loc	1 31 102
	// begin inline asm
	cvt.f32.bf16 %r6, %rs1;
	// end inline asm
	mov.b32 	%f1, %r6;
	// begin inline asm
	cvt.f32.bf16 %r7, %rs2;
	// end inline asm
	mov.b32 	%f2, %r7;
	// begin inline asm
	cvt.f32.bf16 %r8, %rs3;
	// end inline asm
	mov.b32 	%f3, %r8;
	// begin inline asm
	cvt.f32.bf16 %r9, %rs4;
	// end inline asm
	mov.b32 	%f4, %r9;
	.loc	1 33 22
	mul.f32 	%f5, %f2, %f2;
$L__tmp1:
	.loc	2 256 15
	fma.rn.f32 	%f6, %f1, %f1, %f5;
	fma.rn.f32 	%f7, %f3, %f3, %f6;
	fma.rn.f32 	%f8, %f4, %f4, %f7;
	.loc	2 267 36
	mov.b32 	%r48, %f8;
	shfl.sync.bfly.b32	%r49, %r48, 16, 31, -1;
	mov.b32 	%f9, %r49;
	.loc	2 256 15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36
	mov.b32 	%r50, %f10;
	shfl.sync.bfly.b32	%r51, %r50, 8, 31, -1;
	mov.b32 	%f11, %r51;
	.loc	2 256 15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36
	mov.b32 	%r52, %f12;
	shfl.sync.bfly.b32	%r53, %r52, 4, 31, -1;
	mov.b32 	%f13, %r53;
	.loc	2 256 15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36
	mov.b32 	%r54, %f14;
	shfl.sync.bfly.b32	%r55, %r54, 2, 31, -1;
	mov.b32 	%f15, %r55;
	.loc	2 256 15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36
	mov.b32 	%r56, %f16;
	shfl.sync.bfly.b32	%r57, %r56, 1, 31, -1;
	mov.b32 	%f17, %r57;
	.loc	2 256 15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36
	setp.eq.s32 	%p4, %r43, 0;
	shr.u32 	%r58, %r42, 3;
	and.b32  	%r59, %r58, 60;
	mov.u32 	%r60, global_smem;
	add.s32 	%r10, %r60, %r59;
	mov.b32 	%r11, %f18;
	// begin inline asm
	@%p4 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p5, %r42, 16;
	add.s32 	%r13, %r60, %r44;
	// begin inline asm
	@%p5 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r12;
	shfl.sync.bfly.b32	%r61, %r12, 8, 31, -1;
	mov.b32 	%f20, %r61;
	.loc	2 256 15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36
	mov.b32 	%r62, %f21;
	shfl.sync.bfly.b32	%r63, %r62, 4, 31, -1;
	mov.b32 	%f22, %r63;
	.loc	2 256 15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36
	mov.b32 	%r64, %f23;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	mov.b32 	%f24, %r65;
	.loc	2 256 15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36
	mov.b32 	%r66, %f25;
	shfl.sync.bfly.b32	%r67, %r66, 1, 31, -1;
	mov.b32 	%f26, %r67;
	.loc	2 256 15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36
	and.b32  	%r68, %r42, 15;
	setp.eq.s32 	%p15, %r68, 0;
	and.pred  	%p6, %p5, %p15;
	mov.b32 	%r15, %f27;
	// begin inline asm
	@%p6 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 39 18
	ld.shared.u32 	%r17, [global_smem];
	.loc	1 42 28
	bar.sync 	0;
	mov.b32 	%r18, 1157627904;
	.loc	1 39 18
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f28, %r16;
	.loc	1 41 18
	add.f32 	%f29, %f28, 0f3727C5AC;
	.loc	1 42 28
	rsqrt.approx.ftz.f32 	%f30, %f29;
	.loc	1 43 4
	bar.sync 	0;
	.loc	1 44 28
	mul.wide.s32 	%rd11, %r1, 4;
	add.s64 	%rd2, %rd6, %rd11;
	.loc	1 44 40
	and.b32  	%r69, %r42, 511;
	setp.eq.s32 	%p7, %r69, 0;
	mov.b32 	%r19, %f30;
	// begin inline asm
	@%p7 st.global.b32 [ %rd2 + 0 ], { %r19 };
	// end inline asm
	.loc	1 49 52
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r20, %r21 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r20, %r4;
	@!%p1 mov.u32 %r21, %r4;
	// end inline asm
	cvt.u16.u32 	%rs5, %r20;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r20; }
	cvt.u16.u32 	%rs7, %r21;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r21; }
	.loc	1 49 104
	// begin inline asm
	cvt.f32.bf16 %r24, %rs5;
	// end inline asm
	mov.b32 	%f31, %r24;
	// begin inline asm
	cvt.f32.bf16 %r25, %rs6;
	// end inline asm
	mov.b32 	%f32, %r25;
	// begin inline asm
	cvt.f32.bf16 %r26, %rs7;
	// end inline asm
	mov.b32 	%f33, %r26;
	// begin inline asm
	cvt.f32.bf16 %r27, %rs8;
	// end inline asm
	mov.b32 	%f34, %r27;
	.loc	1 50 35
	mul.wide.u32 	%rd12, %r45, 2;
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 50 40
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r28, %r4;
	@!%p1 mov.u32 %r29, %r4;
	// end inline asm
	cvt.u16.u32 	%rs9, %r28;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs10}, %r28; }
	cvt.u16.u32 	%rs11, %r29;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs12}, %r29; }
	.loc	1 50 91
	// begin inline asm
	cvt.f32.bf16 %r32, %rs9;
	// end inline asm
	mov.b32 	%f35, %r32;
	// begin inline asm
	cvt.f32.bf16 %r33, %rs10;
	// end inline asm
	mov.b32 	%f36, %r33;
	// begin inline asm
	cvt.f32.bf16 %r34, %rs11;
	// end inline asm
	mov.b32 	%f37, %r34;
	// begin inline asm
	cvt.f32.bf16 %r35, %rs12;
	// end inline asm
	mov.b32 	%f38, %r35;
	.loc	1 52 24
	mul.f32 	%f39, %f30, %f31;
	mul.f32 	%f40, %f30, %f32;
	mul.f32 	%f41, %f30, %f33;
	mul.f32 	%f42, %f30, %f34;
	.loc	1 54 24
	mul.f32 	%f43, %f39, %f35;
	mul.f32 	%f44, %f40, %f36;
	mul.f32 	%f45, %f41, %f37;
	mul.f32 	%f46, %f42, %f38;
	.loc	1 55 29
	add.s64 	%rd5, %rd9, %rd10;
	.loc	1 55 53
	mov.b32 	%r36, %f43;
	// begin inline asm
	cvt.rn.bf16.f32 %rs13, %r36;
	// end inline asm
	mov.b32 	%r37, %f44;
	// begin inline asm
	cvt.rn.bf16.f32 %rs14, %r37;
	// end inline asm
	mov.b32 	%r38, %f45;
	// begin inline asm
	cvt.rn.bf16.f32 %rs15, %r38;
	// end inline asm
	mov.b32 	%r39, %f46;
	// begin inline asm
	cvt.rn.bf16.f32 %rs16, %r39;
	// end inline asm
	mov.b32 	%r70, {%rs13, %rs14};
	mov.b32 	%r71, {%rs15, %rs16};
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r70, %r71 };
	// end inline asm
	.loc	1 45 4
	ret;
$L__tmp3:
$L__func_end0:

}
	.file	1 "/auto/home/menuab/code/YNNtitan/torchinductor_menuab/t3/ct3ummmx75d5nnzayexvc3s42exqjbbuomtqszsbepkdnn5sqk67.py"
	.file	2 "/auto/home/menuab/miniforge3/envs/titan/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 206
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 116
.b8 51
.b8 117
.b8 109
.b8 109
.b8 109
.b8 120
.b8 55
.b8 53
.b8 100
.b8 53
.b8 110
.b8 110
.b8 122
.b8 97
.b8 121
.b8 101
.b8 120
.b8 118
.b8 99
.b8 51
.b8 115
.b8 52
.b8 50
.b8 101
.b8 120
.b8 113
.b8 106
.b8 98
.b8 98
.b8 117
.b8 111
.b8 109
.b8 116
.b8 113
.b8 115
.b8 122
.b8 115
.b8 98
.b8 101
.b8 112
.b8 107
.b8 100
.b8 110
.b8 110
.b8 53
.b8 115
.b8 113
.b8 107
.b8 54
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 97
.b8 117
.b8 116
.b8 111
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 101
.b8 110
.b8 117
.b8 97
.b8 98
.b8 47
.b8 99
.b8 111
.b8 100
.b8 101
.b8 47
.b8 89
.b8 78
.b8 78
.b8 116
.b8 105
.b8 116
.b8 97
.b8 110
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 109
.b8 101
.b8 110
.b8 117
.b8 97
.b8 98
.b8 47
.b8 116
.b8 51
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 153
.b8 4
.b32 153
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 37
.b8 25
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
