; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 9, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 510, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = sext i32 %12 to i64, !dbg !14
  %14 = getelementptr i16, ptr addrspace(1) %0, i64 %13, !dbg !14
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #1, !dbg !15
  %16 = trunc i32 %15 to i16, !dbg !15
  %extelt.offset = lshr i32 %15, 16, !dbg !15
  %17 = trunc nuw i32 %extelt.offset to i16, !dbg !15
  %18 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %16) #1, !dbg !16
  %19 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %17) #1, !dbg !16
  %20 = getelementptr i16, ptr addrspace(1) %1, i64 %13, !dbg !17
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !18
  %22 = trunc i32 %21 to i16, !dbg !18
  %extelt.offset1 = lshr i32 %21, 16, !dbg !18
  %23 = trunc nuw i32 %extelt.offset1 to i16, !dbg !18
  %24 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %22) #1, !dbg !19
  %25 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %23) #1, !dbg !19
  %26 = getelementptr i16, ptr addrspace(1) %2, i64 %13, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !21
  %28 = trunc i32 %27 to i16, !dbg !21
  %extelt.offset2 = lshr i32 %27, 16, !dbg !21
  %29 = trunc nuw i32 %extelt.offset2 to i16, !dbg !21
  %30 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %28) #1, !dbg !22
  %31 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %29) #1, !dbg !22
  %32 = fsub float 0.000000e+00, %24, !dbg !23
  %33 = fsub float 0.000000e+00, %25, !dbg !23
  %34 = fmul float %32, 0x3FF7154760000000, !dbg !27
  %35 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %34) #1, !dbg !27
  %36 = fmul float %33, 0x3FF7154760000000, !dbg !27
  %37 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %36) #1, !dbg !27
  %38 = fadd float %35, 1.000000e+00, !dbg !28
  %39 = fadd float %37, 1.000000e+00, !dbg !28
  %40 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %38) #1, !dbg !29
  %41 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %39) #1, !dbg !29
  %42 = fmul float %24, %40, !dbg !30
  %43 = fmul float %25, %41, !dbg !30
  %44 = fmul float %18, %42, !dbg !31
  %45 = fmul float %19, %43, !dbg !31
  %46 = fmul float %18, %30, !dbg !32
  %47 = fmul float %19, %31, !dbg !32
  %48 = fsub float 1.000000e+00, %40, !dbg !33
  %49 = fsub float 1.000000e+00, %41, !dbg !33
  %50 = fmul float %24, %48, !dbg !34
  %51 = fmul float %25, %49, !dbg !34
  %52 = fadd float %50, 1.000000e+00, !dbg !35
  %53 = fadd float %51, 1.000000e+00, !dbg !35
  %54 = fmul float %40, %52, !dbg !36
  %55 = fmul float %41, %53, !dbg !36
  %56 = fmul float %46, %54, !dbg !37
  %57 = fmul float %47, %55, !dbg !37
  %58 = getelementptr i16, ptr addrspace(1) %3, i64 %13, !dbg !38
  %59 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %44) #1, !dbg !39
  %60 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %45) #1, !dbg !39
  %61 = insertelement <2 x i16> poison, i16 %59, i64 0, !dbg !39
  %62 = insertelement <2 x i16> %61, i16 %60, i64 1, !dbg !39
  %63 = bitcast <2 x i16> %62 to i32, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %63, ptr addrspace(1) %58, i1 true) #1, !dbg !39
  %64 = getelementptr i16, ptr addrspace(1) %4, i64 %13, !dbg !40
  %65 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %56) #1, !dbg !41
  %66 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %57) #1, !dbg !41
  %67 = insertelement <2 x i16> poison, i16 %65, i64 0, !dbg !41
  %68 = insertelement <2 x i16> %67, i16 %66, i64 1, !dbg !41
  %69 = bitcast <2 x i16> %68 to i32, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %69, ptr addrspace(1) %64, i1 true) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "colhw4bnj2cxn3nm4cch4l5wqlarckdnqp72s4ndd4yzz4s3pxfo.py", directory: "/auto/home/menuab/code/YNNtitan/torchinductor_menuab/ol")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 20, column: 28, scope: !7)
!11 = !DILocation(line: 20, column: 33, scope: !7)
!12 = !DILocation(line: 21, column: 36, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 30, scope: !7)
!15 = !DILocation(line: 24, column: 35, scope: !7)
!16 = !DILocation(line: 24, column: 44, scope: !7)
!17 = !DILocation(line: 25, column: 30, scope: !7)
!18 = !DILocation(line: 25, column: 35, scope: !7)
!19 = !DILocation(line: 25, column: 44, scope: !7)
!20 = !DILocation(line: 26, column: 30, scope: !7)
!21 = !DILocation(line: 26, column: 35, scope: !7)
!22 = !DILocation(line: 26, column: 44, scope: !7)
!23 = !DILocation(line: 51, column: 30, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "standard.py", directory: "/auto/home/menuab/miniforge3/envs/titan/lib/python3.10/site-packages/triton/language")
!26 = !DILocation(line: 28, column: 22, scope: !7)
!27 = !DILocation(line: 51, column: 29, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 51, column: 20, scope: !24, inlinedAt: !26)
!29 = !DILocation(line: 51, column: 16, scope: !24, inlinedAt: !26)
!30 = !DILocation(line: 29, column: 18, scope: !7)
!31 = !DILocation(line: 31, column: 18, scope: !7)
!32 = !DILocation(line: 32, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 20, scope: !7)
!34 = !DILocation(line: 36, column: 19, scope: !7)
!35 = !DILocation(line: 37, column: 20, scope: !7)
!36 = !DILocation(line: 38, column: 19, scope: !7)
!37 = !DILocation(line: 39, column: 19, scope: !7)
!38 = !DILocation(line: 40, column: 25, scope: !7)
!39 = !DILocation(line: 40, column: 36, scope: !7)
!40 = !DILocation(line: 41, column: 25, scope: !7)
!41 = !DILocation(line: 41, column: 37, scope: !7)
!42 = !DILocation(line: 41, column: 4, scope: !7)
