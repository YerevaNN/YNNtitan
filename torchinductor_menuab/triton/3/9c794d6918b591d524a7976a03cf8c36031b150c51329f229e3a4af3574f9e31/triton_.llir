; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"

define void @triton_(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = sext i32 %10 to i64, !dbg !14
  %12 = getelementptr i16, ptr addrspace(1) %1, i64 %11, !dbg !14
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 true) #1, !dbg !15
  %14 = trunc i32 %13 to i16, !dbg !15
  %extelt.offset = lshr i32 %13, 16, !dbg !15
  %15 = trunc nuw i32 %extelt.offset to i16, !dbg !15
  %16 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %14) #1, !dbg !16
  %17 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %15) #1, !dbg !16
  %18 = getelementptr i16, ptr addrspace(1) %2, i64 %11, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !18
  %20 = trunc i32 %19 to i16, !dbg !18
  %extelt.offset1 = lshr i32 %19, 16, !dbg !18
  %21 = trunc nuw i32 %extelt.offset1 to i16, !dbg !18
  %22 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %20) #1, !dbg !19
  %23 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %21) #1, !dbg !19
  %24 = getelementptr i16, ptr addrspace(1) %0, i64 %11, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !21
  %26 = trunc i32 %25 to i16, !dbg !21
  %extelt.offset2 = lshr i32 %25, 16, !dbg !21
  %27 = trunc nuw i32 %extelt.offset2 to i16, !dbg !21
  %28 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %26) #1, !dbg !22
  %29 = tail call float asm "cvt.f32.bf16 $0, $1;", "=r,h"(i16 %27) #1, !dbg !22
  %30 = fadd float %16, %22, !dbg !23
  %31 = fadd float %17, %23, !dbg !23
  %32 = fadd float %30, %28, !dbg !24
  %33 = fadd float %31, %29, !dbg !24
  %34 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %32) #1, !dbg !25
  %35 = tail call i16 asm "cvt.rn.bf16.f32 $0, $1;", "=h,r"(float %33) #1, !dbg !25
  %36 = insertelement <2 x i16> poison, i16 %34, i64 0, !dbg !25
  %37 = insertelement <2 x i16> %36, i16 %35, i64 1, !dbg !25
  %38 = bitcast <2 x i16> %37 to i32, !dbg !25
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %38, ptr addrspace(1) %24, i1 true) #1, !dbg !25
  ret void, !dbg !26
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7pvoahj3hytxspqvo46omihhngusz2lsksmqpcxop4v25vk243r.py", directory: "/auto/home/menuab/code/YNNtitan/torchinductor_menuab/7p")
!4 = !{ptr @triton_, !"kernel", i32 1}
!5 = !{ptr @triton_, !"maxntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_", linkageName: "triton_", scope: !3, file: !3, line: 18, type: !8, scopeLine: 18, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 20, column: 28, scope: !7)
!11 = !DILocation(line: 20, column: 33, scope: !7)
!12 = !DILocation(line: 21, column: 36, scope: !7)
!13 = !DILocation(line: 21, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 30, scope: !7)
!15 = !DILocation(line: 24, column: 35, scope: !7)
!16 = !DILocation(line: 24, column: 44, scope: !7)
!17 = !DILocation(line: 25, column: 30, scope: !7)
!18 = !DILocation(line: 25, column: 35, scope: !7)
!19 = !DILocation(line: 25, column: 44, scope: !7)
!20 = !DILocation(line: 26, column: 34, scope: !7)
!21 = !DILocation(line: 26, column: 39, scope: !7)
!22 = !DILocation(line: 26, column: 48, scope: !7)
!23 = !DILocation(line: 27, column: 18, scope: !7)
!24 = !DILocation(line: 28, column: 18, scope: !7)
!25 = !DILocation(line: 29, column: 39, scope: !7)
!26 = !DILocation(line: 29, column: 4, scope: !7)
