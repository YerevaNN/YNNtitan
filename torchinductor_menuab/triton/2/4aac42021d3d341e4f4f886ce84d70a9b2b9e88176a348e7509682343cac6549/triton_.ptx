//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_80
.address_size 64

	// .globl	triton_
.extern .shared .align 16 .b8 global_smem[];

.visible .entry triton_(
	.param .u64 triton__param_0,
	.param .u64 triton__param_1,
	.param .u64 triton__param_2,
	.param .u64 triton__param_3,
	.param .u64 triton__param_4,
	.param .u64 triton__param_5,
	.param .u64 triton__param_6,
	.param .u64 triton__param_7,
	.param .u64 triton__param_8,
	.param .u64 triton__param_9,
	.param .u64 triton__param_10,
	.param .u32 triton__param_11,
	.param .u32 triton__param_12
)
.maxntid 128, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<145>;
	.reg .f32 	%f<119>;
	.reg .b64 	%rd<34>;
	.loc	1 18 0
$L__func_begin0:
	.loc	1 18 0

	ld.param.u64 	%rd15, [triton__param_10];
	ld.param.u64 	%rd14, [triton__param_9];
	ld.param.u64 	%rd13, [triton__param_7];
	ld.param.u64 	%rd12, [triton__param_6];
	ld.param.u64 	%rd11, [triton__param_5];
	ld.param.u64 	%rd10, [triton__param_3];
	ld.param.u64 	%rd9, [triton__param_2];
	ld.param.u64 	%rd8, [triton__param_1];
	ld.param.u64 	%rd7, [triton__param_0];
$L__tmp0:
	.loc	1 21 28
	// begin inline asm
	mov.u32 %r16, %ctaid.x;
	// end inline asm
	.loc	1 21 33
	shl.b32 	%r1, %r16, 6;
	.loc	1 22 44
	mov.u32 	%r18, %tid.x;
	ld.param.u64 	%rd16, [triton__param_4];
	shl.b32 	%r19, %r18, 2;
	and.b32  	%r20, %r19, 4;
	and.b32  	%r21, %r19, 60;
	shr.u32 	%r3, %r18, 5;
	ld.param.u64 	%rd17, [triton__param_8];
	bfe.u32 	%r22, %r18, 1, 6;
	.loc	1 22 23
	or.b32  	%r23, %r1, %r21;
	or.b32  	%r24, %r1, %r22;
	.loc	1 26 20
	bfe.s32 	%r25, %r16, 25, 1;
	shr.u32 	%r26, %r25, 21;
	add.s32 	%r27, %r23, %r26;
	shr.s32 	%r28, %r27, 11;
	add.s32 	%r29, %r24, %r26;
	shr.s32 	%r30, %r29, 11;
	.loc	1 38 44
	shl.b32 	%r31, %r30, 7;
	bfe.u32 	%r32, %r18, 5, 2;
	bfe.u32 	%r33, %r18, 4, 1;
	shl.b32 	%r34, %r32, 1;
	or.b32  	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r21, 12;
	or.b32  	%r37, %r35, %r36;
	shl.b32 	%r38, %r37, 1;
	mov.u32 	%r39, global_smem;
	add.s32 	%r4, %r39, %r38;
	bfe.u32 	%r6, %r18, 1, 4;
	shl.b32 	%r40, %r32, 4;
	or.b32  	%r41, %r40, %r6;
	mad.lo.s32 	%r42, %r41, 12, %r20;
	shl.b32 	%r43, %r42, 1;
	add.s32 	%r7, %r39, %r43;
	shl.b32 	%r44, %r37, 2;
	add.s32 	%r8, %r39, %r44;
	shl.b32 	%r45, %r42, 2;
	add.s32 	%r10, %r39, %r45;
	.loc	1 30 36
	mad.lo.s32 	%r46, %r28, 260096, %r23;
	shl.b32 	%r47, %r18, 7;
	and.b32  	%r48, %r47, 14336;
	add.s32 	%r143, %r46, %r48;
	or.b32  	%r49, %r31, %r20;
	mul.wide.s32 	%rd18, %r49, 4;
	add.s64 	%rd33, %rd17, %rd18;
	add.s64 	%rd32, %rd16, %rd18;
	mov.f32 	%f111, 0f00000000;
	mov.b32 	%r144, -8;
	mov.pred 	%p1, -1;
	mov.f32 	%f112, %f111;
	mov.f32 	%f113, %f111;
	mov.f32 	%f114, %f111;
	mov.f32 	%f115, %f111;
	mov.f32 	%f116, %f111;
	mov.f32 	%f117, %f111;
	mov.f32 	%f118, %f111;
$L__BB0_1:
	.loc	1 34 34
	mul.wide.s32 	%rd28, %r143, 2;
	add.s64 	%rd19, %rd7, %rd28;
	mov.b32 	%r52, 0;
	.loc	1 34 65
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r50, %r51 }, [ %rd19 + 0 ];
	@!%p1 mov.u32 %r50, %r52;
	@!%p1 mov.u32 %r51, %r52;
	// end inline asm
	cvt.u16.u32 	%rs1, %r50;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs2}, %r50; }
	cvt.u16.u32 	%rs3, %r51;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs4}, %r51; }
	.loc	1 34 117
	// begin inline asm
	cvt.f32.bf16 %r54, %rs1;
	// end inline asm
	mov.b32 	%f25, %r54;
	// begin inline asm
	cvt.f32.bf16 %r55, %rs2;
	// end inline asm
	mov.b32 	%f26, %r55;
	// begin inline asm
	cvt.f32.bf16 %r56, %rs3;
	// end inline asm
	mov.b32 	%f27, %r56;
	// begin inline asm
	cvt.f32.bf16 %r57, %rs4;
	// end inline asm
	mov.b32 	%f28, %r57;
	.loc	1 35 34
	add.s64 	%rd20, %rd8, %rd28;
	.loc	1 35 65
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r58, %r59 }, [ %rd20 + 0 ];
	@!%p1 mov.u32 %r58, %r52;
	@!%p1 mov.u32 %r59, %r52;
	// end inline asm
	cvt.u16.u32 	%rs5, %r58;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs6}, %r58; }
	cvt.u16.u32 	%rs7, %r59;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs8}, %r59; }
	.loc	1 35 117
	// begin inline asm
	cvt.f32.bf16 %r62, %rs5;
	// end inline asm
	mov.b32 	%f29, %r62;
	// begin inline asm
	cvt.f32.bf16 %r63, %rs6;
	// end inline asm
	mov.b32 	%f30, %r63;
	// begin inline asm
	cvt.f32.bf16 %r64, %rs7;
	// end inline asm
	mov.b32 	%f31, %r64;
	// begin inline asm
	cvt.f32.bf16 %r65, %rs8;
	// end inline asm
	mov.b32 	%f32, %r65;
	.loc	1 36 34
	add.s64 	%rd21, %rd9, %rd28;
	.loc	1 36 65
	// begin inline asm
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r66, %r67 }, [ %rd21 + 0 ];
	@!%p1 mov.u32 %r66, %r52;
	@!%p1 mov.u32 %r67, %r52;
	// end inline asm
	cvt.u16.u32 	%rs13, %r66;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs14}, %r66; }
	cvt.u16.u32 	%rs15, %r67;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs16}, %r67; }
	.loc	1 36 117
	bar.sync 	0;
	st.shared.u16 	[%r4], %rs13;
	st.shared.u16 	[%r4+24], %rs14;
	st.shared.u16 	[%r4+48], %rs15;
	st.shared.u16 	[%r4+72], %rs16;
	bar.sync 	0;
	ld.shared.v4.u16 	{%rs9, %rs10, %rs11, %rs12}, [%r7];
	// begin inline asm
	cvt.f32.bf16 %r70, %rs9;
	// end inline asm
	mov.b32 	%f33, %r70;
	// begin inline asm
	cvt.f32.bf16 %r71, %rs10;
	// end inline asm
	mov.b32 	%f34, %r71;
	// begin inline asm
	cvt.f32.bf16 %r72, %rs11;
	// end inline asm
	mov.b32 	%f35, %r72;
	// begin inline asm
	cvt.f32.bf16 %r73, %rs12;
	// end inline asm
	mov.b32 	%f36, %r73;
	// begin inline asm
	cvt.f32.bf16 %r74, %rs13;
	// end inline asm
	mov.b32 	%f37, %r74;
	// begin inline asm
	cvt.f32.bf16 %r75, %rs14;
	// end inline asm
	mov.b32 	%f38, %r75;
	// begin inline asm
	cvt.f32.bf16 %r76, %rs15;
	// end inline asm
	mov.b32 	%f39, %r76;
	// begin inline asm
	cvt.f32.bf16 %r77, %rs16;
	// end inline asm
	mov.b32 	%f40, %r77;
	.loc	1 37 34
	add.s64 	%rd22, %rd10, %rd28;
	.loc	1 37 65
	// begin inline asm
	mov.u32 %r78, 0x0;
	mov.u32 %r79, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r78, %r79 }, [ %rd22 + 0 ];
	@!%p1 mov.u32 %r78, %r52;
	@!%p1 mov.u32 %r79, %r52;
	// end inline asm
	cvt.u16.u32 	%rs17, %r78;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs18}, %r78; }
	cvt.u16.u32 	%rs19, %r79;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs20}, %r79; }
	.loc	1 37 117
	// begin inline asm
	cvt.f32.bf16 %r82, %rs17;
	// end inline asm
	mov.b32 	%f41, %r82;
	// begin inline asm
	cvt.f32.bf16 %r83, %rs18;
	// end inline asm
	mov.b32 	%f42, %r83;
	// begin inline asm
	cvt.f32.bf16 %r84, %rs19;
	// end inline asm
	mov.b32 	%f43, %r84;
	// begin inline asm
	cvt.f32.bf16 %r85, %rs20;
	// end inline asm
	mov.b32 	%f44, %r85;
	.loc	1 38 50
	// begin inline asm
	mov.u32 %r86, 0x0;
	mov.u32 %r87, 0x0;
	mov.u32 %r88, 0x0;
	mov.u32 %r89, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r86, %r87, %r88, %r89 }, [ %rd32 + 0 ];
	@!%p1 mov.u32 %r86, %r52;
	@!%p1 mov.u32 %r87, %r52;
	@!%p1 mov.u32 %r88, %r52;
	@!%p1 mov.u32 %r89, %r52;
	// end inline asm
	.loc	1 39 35
	add.s64 	%rd24, %rd11, %rd28;
	.loc	1 39 66
	// begin inline asm
	mov.u32 %r94, 0x0;
	mov.u32 %r95, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r94, %r95 }, [ %rd24 + 0 ];
	@!%p1 mov.u32 %r94, %r52;
	@!%p1 mov.u32 %r95, %r52;
	// end inline asm
	cvt.u16.u32 	%rs21, %r94;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs22}, %r94; }
	cvt.u16.u32 	%rs23, %r95;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs24}, %r95; }
	.loc	1 39 118
	// begin inline asm
	cvt.f32.bf16 %r98, %rs21;
	// end inline asm
	mov.b32 	%f45, %r98;
	// begin inline asm
	cvt.f32.bf16 %r99, %rs22;
	// end inline asm
	mov.b32 	%f46, %r99;
	// begin inline asm
	cvt.f32.bf16 %r100, %rs23;
	// end inline asm
	mov.b32 	%f47, %r100;
	// begin inline asm
	cvt.f32.bf16 %r101, %rs24;
	// end inline asm
	mov.b32 	%f48, %r101;
	.loc	1 40 35
	add.s64 	%rd25, %rd12, %rd28;
	.loc	1 40 66
	// begin inline asm
	mov.u32 %r102, 0x0;
	mov.u32 %r103, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r102, %r103 }, [ %rd25 + 0 ];
	@!%p1 mov.u32 %r102, %r52;
	@!%p1 mov.u32 %r103, %r52;
	// end inline asm
	cvt.u16.u32 	%rs25, %r102;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs26}, %r102; }
	cvt.u16.u32 	%rs27, %r103;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs28}, %r103; }
	.loc	1 40 118
	// begin inline asm
	cvt.f32.bf16 %r106, %rs25;
	// end inline asm
	mov.b32 	%f49, %r106;
	// begin inline asm
	cvt.f32.bf16 %r107, %rs26;
	// end inline asm
	mov.b32 	%f50, %r107;
	// begin inline asm
	cvt.f32.bf16 %r108, %rs27;
	// end inline asm
	mov.b32 	%f51, %r108;
	// begin inline asm
	cvt.f32.bf16 %r109, %rs28;
	// end inline asm
	mov.b32 	%f52, %r109;
	.loc	1 41 35
	add.s64 	%rd26, %rd13, %rd28;
	.loc	1 41 66
	// begin inline asm
	mov.u32 %r110, 0x0;
	mov.u32 %r111, 0x0;
	@%p1 ld.global.L1::evict_first.v2.b32 { %r110, %r111 }, [ %rd26 + 0 ];
	@!%p1 mov.u32 %r110, %r52;
	@!%p1 mov.u32 %r111, %r52;
	// end inline asm
	cvt.u16.u32 	%rs29, %r110;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs30}, %r110; }
	cvt.u16.u32 	%rs31, %r111;
	{ .reg .b16 tmp; mov.b32 {tmp, %rs32}, %r111; }
	.loc	1 41 118
	// begin inline asm
	cvt.f32.bf16 %r114, %rs29;
	// end inline asm
	mov.b32 	%f53, %r114;
	// begin inline asm
	cvt.f32.bf16 %r115, %rs30;
	// end inline asm
	mov.b32 	%f54, %r115;
	// begin inline asm
	cvt.f32.bf16 %r116, %rs31;
	// end inline asm
	mov.b32 	%f55, %r116;
	// begin inline asm
	cvt.f32.bf16 %r117, %rs32;
	// end inline asm
	mov.b32 	%f56, %r117;
	.loc	1 42 51
	// begin inline asm
	mov.u32 %r118, 0x0;
	mov.u32 %r119, 0x0;
	mov.u32 %r120, 0x0;
	mov.u32 %r121, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r118, %r119, %r120, %r121 }, [ %rd33 + 0 ];
	@!%p1 mov.u32 %r118, %r52;
	@!%p1 mov.u32 %r119, %r52;
	@!%p1 mov.u32 %r120, %r52;
	@!%p1 mov.u32 %r121, %r52;
	// end inline asm
	.loc	1 43 22
	add.f32 	%f57, %f25, %f29;
	add.f32 	%f58, %f26, %f30;
	add.f32 	%f59, %f27, %f31;
	add.f32 	%f60, %f28, %f32;
	bar.sync 	0;
	st.shared.f32 	[%r8], %f57;
	st.shared.f32 	[%r8+48], %f58;
	st.shared.f32 	[%r8+96], %f59;
	st.shared.f32 	[%r8+144], %f60;
	bar.sync 	0;
	ld.shared.v4.f32 	{%f61, %f62, %f63, %f64}, [%r10];
	.loc	1 44 22
	add.f32 	%f65, %f37, %f41;
	add.f32 	%f66, %f38, %f42;
	add.f32 	%f67, %f39, %f43;
	add.f32 	%f68, %f40, %f44;
	bar.sync 	0;
	st.shared.f32 	[%r8], %f65;
	st.shared.f32 	[%r8+48], %f66;
	st.shared.f32 	[%r8+96], %f67;
	st.shared.f32 	[%r8+144], %f68;
	bar.sync 	0;
	ld.shared.v4.f32 	{%f69, %f70, %f71, %f72}, [%r10];
	.loc	1 52 24
	add.f32 	%f73, %f45, %f49;
	add.f32 	%f74, %f46, %f50;
	add.f32 	%f75, %f47, %f51;
	add.f32 	%f76, %f48, %f52;
	.loc	1 53 24
	add.f32 	%f77, %f73, %f53;
	add.f32 	%f78, %f74, %f54;
	add.f32 	%f79, %f75, %f55;
	add.f32 	%f80, %f76, %f56;
	bar.sync 	0;
	st.shared.f32 	[%r8], %f77;
	st.shared.f32 	[%r8+48], %f78;
	st.shared.f32 	[%r8+96], %f79;
	st.shared.f32 	[%r8+144], %f80;
	bar.sync 	0;
	ld.shared.v4.f32 	{%f81, %f82, %f83, %f84}, [%r10];
	.loc	1 42 51
	mov.b32 	%f85, %r89;
	mov.b32 	%f86, %r88;
	mov.b32 	%f87, %r87;
	mov.b32 	%f88, %r86;
	mov.b32 	%f89, %r121;
	mov.b32 	%f90, %r120;
	mov.b32 	%f91, %r119;
	mov.b32 	%f92, %r118;
	.loc	1 55 24
	mul.f32 	%f93, %f33, %f92;
	mul.f32 	%f94, %f34, %f91;
	mul.f32 	%f95, %f35, %f90;
	mul.f32 	%f96, %f36, %f89;
	mul.f32 	%f97, %f69, %f88;
	mul.f32 	%f98, %f70, %f87;
	mul.f32 	%f99, %f71, %f86;
	mul.f32 	%f100, %f72, %f85;
	.loc	1 59 25
	fma.rn.f32 	%f118, %f100, %f64, %f118;
	fma.rn.f32 	%f117, %f99, %f63, %f117;
	fma.rn.f32 	%f116, %f98, %f62, %f116;
	fma.rn.f32 	%f115, %f97, %f61, %f115;
	fma.rn.f32 	%f114, %f96, %f84, %f114;
	fma.rn.f32 	%f113, %f95, %f83, %f113;
	fma.rn.f32 	%f112, %f94, %f82, %f112;
	fma.rn.f32 	%f111, %f93, %f81, %f111;
	.loc	1 30 36
	add.s32 	%r144, %r144, 8;
	add.s32 	%r143, %r143, 16384;
	add.s64 	%rd33, %rd33, 32;
	add.s64 	%rd32, %rd32, 32;
	setp.lt.u32 	%p32, %r144, 120;
	@%p32 bra 	$L__BB0_1;
	.loc	1 22 44
	and.b32  	%r128, %r18, 63;
	.loc	1 22 23
	or.b32  	%r129, %r1, %r128;
$L__tmp1:
	.loc	2 256 15
	add.f32 	%f101, %f115, %f116;
	add.f32 	%f102, %f117, %f101;
	add.f32 	%f103, %f118, %f102;
	.loc	2 267 36
	mov.b32 	%r130, %f103;
	shfl.sync.bfly.b32	%r131, %r130, 1, 31, -1;
	mov.b32 	%f104, %r131;
	.loc	2 256 15
	add.f32 	%f105, %f103, %f104;
$L__tmp2:
	.loc	1 61 30
	bar.sync 	0;
	shl.b32 	%r132, %r3, 4;
	and.b32  	%r133, %r132, 48;
	or.b32  	%r134, %r133, %r6;
	shl.b32 	%r135, %r134, 2;
	add.s32 	%r137, %r39, %r135;
	st.shared.f32 	[%r137], %f105;
	bar.sync 	0;
	shl.b32 	%r138, %r128, 2;
	add.s32 	%r139, %r39, %r138;
	ld.shared.u32 	%r126, [%r139];
	.loc	1 62 25
	mul.wide.s32 	%rd31, %r129, 4;
	add.s64 	%rd29, %rd14, %rd31;
	.loc	1 62 37
	and.b32  	%r140, %r18, 64;
	setp.eq.s32 	%p33, %r140, 0;
	// begin inline asm
	@%p33 st.global.b32 [ %rd29 + 0 ], { %r126 };
	// end inline asm
$L__tmp3:
	.loc	2 256 15
	add.f32 	%f106, %f111, %f112;
	add.f32 	%f107, %f113, %f106;
	add.f32 	%f108, %f114, %f107;
	.loc	2 267 36
	mov.b32 	%r141, %f108;
	shfl.sync.bfly.b32	%r142, %r141, 1, 31, -1;
	mov.b32 	%f109, %r142;
	.loc	2 256 15
	add.f32 	%f110, %f108, %f109;
$L__tmp4:
	.loc	1 63 30
	bar.sync 	0;
	st.shared.f32 	[%r137], %f110;
	bar.sync 	0;
	ld.shared.u32 	%r127, [%r139];
	.loc	1 64 25
	add.s64 	%rd30, %rd15, %rd31;
	.loc	1 64 37
	// begin inline asm
	@%p33 st.global.b32 [ %rd30 + 0 ], { %r127 };
	// end inline asm
	.loc	1 64 4
	ret;
$L__tmp5:
$L__func_end0:

}
	.file	1 "/auto/home/menuab/code/YNNtitan/torchinductor_menuab/tt/ctt6lu6opqtcbdb5c4cz6ozxmnkmunovcdwh7k5pthgd7fx7tvv3.py"
	.file	2 "/auto/home/menuab/miniforge3/envs/titan/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1
.b8 17
.b8 1
.b8 37
.b8 8
.b8 19
.b8 5
.b8 3
.b8 8
.b8 16
.b8 6
.b8 27
.b8 8
.b8 17
.b8 1
.b8 18
.b8 1
.b8 0
.b8 0
.b8 2
.b8 46
.b8 0
.b8 3
.b8 8
.b8 32
.b8 11
.b8 0
.b8 0
.b8 3
.b8 46
.b8 1
.b8 17
.b8 1
.b8 18
.b8 1
.b8 49
.b8 19
.b8 0
.b8 0
.b8 4
.b8 29
.b8 0
.b8 49
.b8 19
.b8 17
.b8 1
.b8 18
.b8 1
.b8 88
.b8 11
.b8 89
.b8 11
.b8 87
.b8 11
.b8 0
.b8 0
.b8 0
	}
	.section	.debug_info
	{
.b32 230
.b8 2
.b8 0
.b32 .debug_abbrev
.b8 8
.b8 1
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2
.b8 0
.b8 99
.b8 116
.b8 116
.b8 54
.b8 108
.b8 117
.b8 54
.b8 111
.b8 112
.b8 113
.b8 116
.b8 99
.b8 98
.b8 100
.b8 98
.b8 53
.b8 99
.b8 52
.b8 99
.b8 122
.b8 54
.b8 111
.b8 122
.b8 120
.b8 109
.b8 110
.b8 107
.b8 109
.b8 117
.b8 110
.b8 111
.b8 118
.b8 99
.b8 100
.b8 119
.b8 104
.b8 55
.b8 107
.b8 53
.b8 112
.b8 116
.b8 104
.b8 103
.b8 100
.b8 55
.b8 102
.b8 120
.b8 55
.b8 116
.b8 118
.b8 118
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line
.b8 47
.b8 97
.b8 117
.b8 116
.b8 111
.b8 47
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 109
.b8 101
.b8 110
.b8 117
.b8 97
.b8 98
.b8 47
.b8 99
.b8 111
.b8 100
.b8 101
.b8 47
.b8 89
.b8 78
.b8 78
.b8 116
.b8 105
.b8 116
.b8 97
.b8 110
.b8 47
.b8 116
.b8 111
.b8 114
.b8 99
.b8 104
.b8 105
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 109
.b8 101
.b8 110
.b8 117
.b8 97
.b8 98
.b8 47
.b8 116
.b8 116
.b8 0
.b64 $L__func_begin0
.b64 $L__func_end0
.b8 2
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 0
.b8 1
.b8 3
.b64 $L__func_begin0
.b64 $L__func_end0
.b32 153
.b8 4
.b32 153
.b64 $L__tmp1
.b64 $L__tmp2
.b8 1
.b8 61
.b8 27
.b8 4
.b32 153
.b64 $L__tmp3
.b64 $L__tmp4
.b8 1
.b8 63
.b8 27
.b8 0
.b8 0
	}
	.section	.debug_loc	{	}
